services:
    nginx:
        image: nginx:alpine
        ports:
            - "${APP_PORT:-80}:80"
        volumes:
            - ./Docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - .:/var/www/html

        restart: unless-stopped
        depends_on:
            - hotellink
        networks:
            - app-network

    hotellink:
        build:
            context: .
            dockerfile: ./Docker/Dockerfile
        volumes:
            - .:/var/www/html:z
            - ./vendor:/var/www/html/vendor

        restart: unless-stopped
        environment:
            WWWUSER: '${WWWUSER:-1000}'
        networks:
            - app-network
        depends_on:
            pgsql:
                condition: service_healthy
        healthcheck:
            test: [ "CMD-SHELL", "php artisan inspire > /dev/null 2>&1" ]
            interval: 10s
            timeout: 5s
            retries: 3

    pgsql:
        image: postgres:17
        environment:
            POSTGRES_DB: '${DB_DATABASE:-laravel}'
            POSTGRES_USER: '${DB_USERNAME:-laravel}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-password}'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        restart: unless-stopped
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        networks:
            - app-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-laravel}"]
            interval: 5s
            timeout: 5s
            retries: 5


networks:
    app-network:
        driver: bridge

volumes:
    postgres_data:
